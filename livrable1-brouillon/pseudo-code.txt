Nom: standalone.exe
Principe: Produire des fichiers standalone.js contenant la position des pions et le score
Entrées: Coup joués J (jaune) puis R (rouge)
Sorties: Un fichier standalone.js contenant la position et le score en format JSON

Début

dbg <- false // mode debug
gagnee <- false // si la partie est gagnée
trait <- 0 // 0 pour J, 1 pour R

coupOrigine: octet
coupDestination: octet

pos: T_Position
coupPossible: T_listeCoups
score: T_Score

pos <- getPositionInitiale() // initialisation de la partie

// répéter tant que personne n'a gagnée la partie
tant que (!gagnee) faire
	// affichage la couleur a jouer
	Afficher("Au tour des " (trait) ? "rouge" : "jaune")

	faire
		// récupérer l'origine et destination de la pile à déplacer
		Afficher("Position pile à déplacer: ")
		coupOrigine <- Lire()
		Afficher("Destination pile à déplacer: ")
		coupDestination <- Lire()
	Tant que !estValide(pos,coupOrigine,coupDestination)	

	// déplacer le pion 
	pos <- jouerCoup(pos, coupOrigine, coupDestination);

	// récupérer le score des deux joueurs à un certains moment
	score <- evaluerScore(pos)

	// change le trait
	Si (trait == 1)alors
		trait <- 0
	Sinon
		trait <- 1
	finSi

	// enregistrer le déplacement dans le fichier standalone.js
	standalone.json // creation du fichier
	Ecriture("traiterJson({
				"trait":trait
				"scoreJ":score.nbJ
				"scoreJ5":nbJ5
				"scoreR":nbR
				"scoreR5":nbR5
				"cols":["
					Pour i allant de 1 a NBCASE faire
						"{"nb":i,"couleur":trait}"
					Fin_Pour
				"]
			});"
	)

	// terminer la partie si un joueur a gagné
	coupPossible <- getCoupsLegaux(plateau)
	si (!coupPossible.nb) alors
		gagne <- vrai
	fin si

fin tant que

Fin
